http {

    client_max_body_size 20M;

    types {
        text/css    css;
        text/html   html;
    }

    server {
        listen 8080;
        root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;

        # lets you stay on /number page but displays corresponding /count page
        rewrite ^/number/(\w+) /count/$1;


        # regular expression and mapping to index.html //not needed from subject
        location ~* /count/[0-9] {
            root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;
             try_files /index.html =404;
        }

        location /fruits {
            root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;

        }
        # case: map /carbs to /fruits index file
        location /carbs {
            alias /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/fruits;

        }
        # case: no index files served
        location /vegetables {
            root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;
            try_files /vegetables/veggies.html /index.html =404;
        }

        # 307 = http code to redirect user, redirects /crops to /fruits
        location /crops {
            return 307 /fruits;
        }

        location /test {
            root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;

        }

        # Turn on or off directory listing
        location /autoindexstuff/ {
            autoindex on;
        }

        # implementation of different request methods
        location /api/files {
            root /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/;
            client_body_temp_path /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/api/files;

            if ($request_method = POST) {
                # client_body_in_file_only on;

                # Set the name of the file to be saved
                # The $request_id variable is used here to ensure uniqueness
                # You can use other variables or naming schemes as per your needs


                # client_body_file /nfs/homes/jisserst/sgoinfre/webserv/jean/sites/api/files/$request_body_file;
            }
            return 200 "File uploaded successfully";
        }
    }
}

events {}
